Bugs:
    Priority:
        DB doesn't work in built project.
        Spawned turrets don't inherit velocity correctly - tend to get ripped off when spawning at a high velocity.
        ElevationHubs on some drones are disappearing.
        "Can't remove Rigidbody because HingeJoint depends on it"
        rocket engines carry on regardless if the rocket has no target.
        Duplicate match controler in drone evolution
    Graphical - Beams don't turn off when the turret dies. - haven't seen this one in a while.
    Rocket engine plumes start on
    Accounting for speed fails for spinning targets.
    Leting the DB default locationRandomisationRadiai makes it unreadable.
    Severed components remain targetable. - not sure if this is actually a problem.
    

TODO:
    In Progress:
        Menus
            keyboard navigation
            Scrollable lists
            Delete config option (takes all individuals and match and mutation configs too)
            Proper inputs for numbers and bools
        Eyeball turret
            Account for parent angularV
    Priority:
        Torpedoes detonate at closest approach isf out of fuel.
        Lightsabers!
        score -= genome.Cost (final cost)
        score -= genome.Length (for use with variable length genomes)
        investigate use of entity framework.
        Randomise target choosing mechanism periods so they don't come up at the same time.
        Some tool to show graphs of genomes over time.
        Cardboard support
        Test on phone
        Add to Play store?
        Fighters - using engines as weapons/using guns/both.
            Fix fighter type 1 turret
        Evasive manuevers
        Some way for turrets to account for their own turn rates. - to keep up with tracking moving targets.
        Use torquers(including engines) to halt rotation (instead of relying on angular drag hack).
        Refactor rocket controller's start delay feature.
        Rockets stop running anything but their trigger when they run out of fuel.
        Some way to set the roll of ships to have a direction that should be pointed at the enemy where possible.
        Spherical trigger around missiles that puts them into max evasion mode regardless of velocity
        Destruction only leaves objects with a rigibdbody and a health controller
        TargetPickers have option to kull all but the best x.
        Prevent fluttery torpedoes.
        limited ammo
            Turrets can store some
            hubs contain generic ammo, turrets can ask for a mass of it.
        limited power
            Hubs have batteries to store energy
            Hubs have generators to recharge batteries.


    Avoid GetComponent and sendMessage in update methods.
    Limit throttle change speeds.
    Velocity override option for exploder - to prevent the flyaway explosions in very high speed collisions.
        Possibly go by the average momentum of the colliding bodies.
    option for spaceships that don't break up   
        Turrets can be destroyed, but otherwise the whole thing has one lot of health - probably using pass damage up.
    allow components in the same cubic volume if they wouldn't intersect.
    Turrets should know the ways they cannot turn.
    Draws should be penalised less if the ships killed each other simultaneously. probably give them the win score - some constant.
    Sexual reproduction
    projectiles apply force to cancel lateral V. Target set on projectile when fired.
    Spherical modules with two angles given for where to spawn the sub modules and something to specify termination of that module's spawning (going back up to the previous)
    FuelTank option to balance fuel with parent.
    Add more max and min settings for genetic configurables, as is done in the fuel tank. Use this for things like projectile speed.
    Track what parts of the genome get used for assembly and config.

    Repulsive shield- repels objects in trigger

    shipCam:
        Make shipcam move faster if the followed object is faster or add a set chunk to the location based on the followed object's speed. - done
            Aternatively make the shipcam have a rigidbody and actually accelerate up to the speed of the tracked object.   - may still want to do this for continuing to track dead things.
        only watch torpedoes instead of other ships when they are close.
        Continue tracking a dead object a while to see it explode and any subsequent effects.

    Camera controller should allow panning also - moot for ship cam
    Camera controller to handle zoom - active when camera is active - moot for shipcam
    Make mini type 2 actually manage to hit torpedoes.

    From Endarren:
        Option to just disable the object at zero health, instead of destroying it.

        I would suggest using Scriptable Objects to hold data, such as projectile speed and damage. This would save memory, since you wouldn't have duplicate data in objects.

        You might want to make the OnCollisionEnter for HealthController do some checks to make sure certain colliders do not accidently do damage.
            HealthController ignores certian tags, but the collisions with any force field still wreck things by physics.

Balance:
    Cluster torpedoes do practically no damage, even when some of the submunitions hit, which happens quite rarely.
    Big lasers should be capable at a bit of a longer range, and a little less up close.
